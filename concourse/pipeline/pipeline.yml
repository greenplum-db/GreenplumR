groups:
- name: All
  jobs:
  - test_plr_light_centos7
  - test_plr_full_centos7
  - test_plr_light_rhel8
  - test_plr_full_rhel8
  - test_plr_light_ubuntu18
  - test_plr_full_ubuntu18
  - test_plcontainer_centos7

- name: plr
  jobs:
  - test_plr_light_centos7
  - test_plr_full_centos7
  - test_plr_light_ubuntu18
  - test_plr_full_ubuntu18
  - test_plr_light_rhel8
  - test_plr_full_rhel8

- name: plcontainer
  jobs:
  - test_plcontainer_centos7

#####################################################
#################### RESOURCES ######################
#####################################################
ccp_create_params_anchor: &ccp_default_params
  action: create
  delete_on_failure: true
  generate_random_name: true
  WITH_MIRRORS: false
  plugin_dir: ../../terraform.d/plugin-cache/linux_amd64
  terraform_source: ccp_src/google/

ccp_vars_anchor: &ccp_default_vars
  instance_type: n1-standard-2
  number_of_nodes: 2

ccp_gen_cluster_default_params_anchor: &ccp_gen_cluster_default_params
  AWS_ACCESS_KEY_ID: {{tf-machine-access-key-id}}
  AWS_SECRET_ACCESS_KEY: {{tf-machine-secret-access-key}}
  AWS_DEFAULT_REGION: {{aws-region}}
  BUCKET_PATH: clusters-google/
  BUCKET_NAME: {{tf-bucket-name}}
  CLOUD_PROVIDER: google

ccp_destroy_anchor: &ccp_destroy
  put: terraform
  params:
    action: destroy
    env_name_file: terraform/name
    plugin_dir: ../../terraform.d/plugin-cache/linux_amd64
    terraform_source: ccp_src/google/
    vars:
      aws_instance-node-instance_type: t2.micro #t2.micro is ignored in destroy, but aws_instance-node-instance_type is required.
      aws_ebs_volume_type: n1-standard-1
  get_params:
    action: destroy

set_failed_anchor: &set_failed
  do:
  - task: on_failure_set_failed
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: gcr.io/data-gpdb-public-images/ccp
          tag: latest
      inputs:
        - name: ccp_src
        - name: terraform
      run:
        path: 'ccp_src/google/ccp_failed_test.sh'
      params:
        GOOGLE_CREDENTIALS: {{google-service-account-key}}
        GOOGLE_PROJECT_ID: {{google-project-id}}
        GOOGLE_ZONE: {{google-zone}}
        GOOGLE_SERVICE_ACCOUNT: {{google-service-account}}
        AWS_ACCESS_KEY_ID: {{tf-machine-access-key-id}}
        AWS_SECRET_ACCESS_KEY: {{tf-machine-secret-access-key}}
        AWS_DEFAULT_REGION: {{tf-machine-region}}
        BUCKET_PATH: clusters-google/
        BUCKET_NAME: {{tf-bucket-name}}
#####################################################

resource_types:
    - name: terraform
      type: registry-image
      source:
        repository: ljfranklin/terraform-resource
        tag: 0.11.14
    - name: gcs
      type: registry-image
      source:
        repository: frodenas/gcs-resource

resources:
# Image Resources
- name: centos-gpdb-dev-7
  type: registry-image
  source:
    repository: gcr.io/data-gpdb-public-images/gpdb5-centos7-build-test
    tag: latest

- name: rhel-image-dev-8
  type: registry-image
  source:
    repository: gcr.io/data-gpdb-private-images/gpdb6-rhel8-test
    tag: latest
    username: _json_key
    password: ((container-registry-readonly-service-account-key))

- name: ubuntu18-image-test
  type: registry-image
  source:
    repository: gcr.io/data-gpdb-public-images/gpdb6-ubuntu18.04-test
    tag: latest

# Github Source Codes
- name: gpdb_src
  type: git
  source:
    branch: 6X_STABLE
    uri: https://github.com/greenplum-db/gpdb.git
    ignore_paths:
    - gpdb-doc/*
    - README*

- name: GreenplumR_src
  type: git
  source:
    branch: sa/6X_rhel8
    uri: https://github.com/greenplum-db/GreenplumR.git

# ccp_src tag_filter is not maintained by gpdb_common-ci-secrets.yml
# so we just pull the laster ccp_src without tag_filter
- name: ccp_src
  type: git
  source:
    branch: {{ccp-git-branch}}
    private_key: {{ccp-git-key}}
    uri: {{ccp-git-remote}}

- name: plcontainer_src
  type: git
  source:
    branch: master
    uri: https://github.com/greenplum-db/plcontainer.git

- name: terraform
  type: terraform
  source:
    env:
      AWS_ACCESS_KEY_ID: {{tf-machine-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{tf-machine-secret-access-key}}
      GOOGLE_CREDENTIALS: {{google-service-account-key}}
    vars:
      project_id: {{google-project-id}}
    storage:
      access_key_id: {{tf-machine-access-key-id}}
      secret_access_key: {{tf-machine-secret-access-key}}
      region_name: {{aws-region}}
      # This is not parameterized, on purpose. All tfstates will go to this spot,
      # and different teams will place there clusters' tfstate files under different paths
      bucket: {{tf-bucket-name}}
      bucket_path: clusters-google/

- name: terraform.d
  source:
    access_key_id: ((bucket-access-key-id))
    bucket: ccp-terraform-provider-plugins
    region_name: ((aws-region))
    secret_access_key: ((bucket-secret-access-key))
    versioned_file: plugin-cache.tgz
  type: s3

- name: bin_gpdb_centos7
  type: gcs
  source:
    bucket: ((gcs-bucket-intermediates))
    json_key: ((concourse-gcs-resources-service-account-key))
    versioned_file: 6X_STABLE/bin_gpdb_centos7/bin_gpdb.tar.gz

- name: bin_gpdb_rhel8
  type: gcs
  source:
    bucket: {{gcs-bucket-intermediates}}
    json_key: {{concourse-gcs-resources-service-account-key}}
    versioned_file: ((gcs_gpdb_binary_folder))/bin_gpdb_rhel8/bin_gpdb.tar.gz

- name: bin_gpdb_ubuntu18
  type: gcs
  source:
    bucket: ((gcs-bucket-intermediates))
    json_key: ((concourse-gcs-resources-service-account-key))
    versioned_file: 6X_STABLE/bin_gpdb_ubuntu18.04/bin_gpdb.tar.gz

- name: bin_plr_centos7
  type: gcs
  source:
    bucket: {{gcs-bucket-intermediates}}
    json_key: ((concourse-gcs-resources-service-account-key))
    versioned_file: plr/published/gpdb6/plr-rhel7.gppkg

- name: bin_plr_rhel8
  type: gcs
  source:
    bucket: {{gcs-bucket-intermediates}}
    json_key: ((concourse-gcs-resources-service-account-key))
    versioned_file: plr/published/gpdb6/plr-rhel8.gppkg

- name: bin_plr_ubuntu18
  type: gcs
  source:
    bucket: {{gcs-bucket-intermediates}}
    json_key: ((concourse-gcs-resources-service-account-key))
    versioned_file: plr/published/gpdb6/plr-ubuntu18.gppkg

- name: plcontainer_docker_image_centos_r
  type: gcs
  source:
    bucket: {{gcs-bucket-intermediates}}
    json_key: {{concourse-gcs-resources-service-account-key}}
    versioned_file: plcontainer/published/master/plcontainer-r-images-devel.tar.gz

- name: bin_plcontainer_centos7
  type: gcs
  source:
    bucket: {{gcs-bucket-intermediates}}
    json_key: {{concourse-gcs-resources-service-account-key}}
    versioned_file: plcontainer/published/master/plcontainer-concourse-centos7.gppkg

- name: plcontainer_gpdb_ubuntu18_build_lib
  type: gcs
  source:
    bucket: {{gcs-bucket-intermediates}}
    json_key: {{concourse-gcs-resources-service-account-key}}
    versioned_file: plcontainer/published/gpdb6/plcontainer-concourse-ubuntu18-lib.tar.gz

jobs:
- name: test_plr_light_rhel8
  plan:
  - aggregate:
    - get: gpdb_src
    - get: GreenplumR_src
      trigger: true
    - get: bin_gpdb
      resource: bin_gpdb_rhel8
    - get: bin_plr
      resource: bin_plr_rhel8
    - get: rhel-image-dev-8
  - task: test_greenplumr_plr_rhel8
    file: GreenplumR_src/concourse/tasks/test_plr.yml
    image: rhel-image-dev-8
    params:

- name: test_plr_full_rhel8
  plan:
  - aggregate:
    - get: gpdb_src
    - get: GreenplumR_src
    - get: bin_gpdb
      resource: bin_gpdb_rhel8
    - get: bin_plr
      resource: bin_plr_rhel8
    - get: rhel-image-dev-8
  - task: test_greenplumr_plr_rhel8
    file: GreenplumR_src/concourse/tasks/test_plr.yml
    image: rhel-image-dev-8
    params:
      MODE: full

- name: test_plr_light_centos7
  plan:
  - aggregate:
    - get: gpdb_src
    - get: GreenplumR_src
      trigger: true
    - get: bin_gpdb
      resource: bin_gpdb_centos7
    - get: bin_plr
      resource: bin_plr_centos7
    - get: centos-gpdb-dev-7
  - task: test_greenplumr_plr_centos7
    file: GreenplumR_src/concourse/tasks/test_plr.yml
    image: centos-gpdb-dev-7
    params:

- name: test_plr_full_centos7
  plan:
  - aggregate:
    - get: gpdb_src
    - get: GreenplumR_src
    - get: bin_gpdb
      resource: bin_gpdb_centos7
    - get: bin_plr
      resource: bin_plr_centos7
    - get: centos-gpdb-dev-7
  - task: test_greenplumr_plr_centos7
    file: GreenplumR_src/concourse/tasks/test_plr.yml
    image: centos-gpdb-dev-7
    params:
      MODE: full

- name: test_plr_light_ubuntu18
  plan:
  - aggregate:
    - get: gpdb_src
    - get: GreenplumR_src
      trigger: true
    - get: bin_gpdb
      resource: bin_gpdb_ubuntu18
    - get: bin_plr
      resource: bin_plr_ubuntu18
    - get: ubuntu18-image-test
  - task: test_greenplumr_plr
    file: GreenplumR_src/concourse/tasks/test_plr.yml
    image: ubuntu18-image-test
    params:

- name: test_plr_full_ubuntu18
  plan:
  - aggregate:
    - get: gpdb_src
    - get: GreenplumR_src
    - get: bin_gpdb
      resource: bin_gpdb_ubuntu18
    - get: bin_plr
      resource: bin_plr_ubuntu18
    - get: ubuntu18-image-test
  - task: test_greenplumr_plr
    file: GreenplumR_src/concourse/tasks/test_plr.yml
    image: ubuntu18-image-test
    params:
      MODE: full

# test GrenplumR for plcontainer
- name: test_plcontainer_centos7
  plan:
  - aggregate:
    - get: plcontainer_src
    - get: GreenplumR_src
      trigger: true
    # this name is needed by ccp to gencluster
    - get: gpdb_binary
      resource: bin_gpdb_centos7
    - get: ccp_src
    - get: terraform.d
      params:
        unpack: true
    - get: centos-gpdb-dev-7
    - get: plcontainer_rclient_docker_image
      resource: plcontainer_docker_image_centos_r
      trigger: true
    - get: bin_plcontainer
      resource: bin_plcontainer_centos7
      trigger: true
    - get: plcontainer_gpdb_ubuntu18_build_lib
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
        WITH_MIRRORS: false
        PLATFORM: centos7
        instance_type: n1-standard-4
        zone: {{google-zone}}
        region: {{google-region}}
  - task: gen_cluster
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
      PLATFORM: centos7
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: test_greenplumr_plcontainer
    file: GreenplumR_src/concourse/tasks/test_plcontainer.yml
    params:
      MODE: full
      platform: centos7
    image: centos-gpdb-dev-7
    on_success:
      <<: *ccp_destroy
  ensure:
    <<: *set_failed

